n <- 1024
k <- seq(0,n, by=30)
plot(k, dbinom(k, n, 0.6, log=TRUE), type='l', ylab="log density",
main = "dbinom(*, log=TRUE) is better than  log(dbinom(*))")
lines(k, log(dbinom(k, n, 0.6)), col='red', lwd=2)
mtext("dbinom(k, log=TRUE)", adj=0)
mtext("extended range", adj=0, line = -1, font=4)
mtext("log(dbinom(k))", col="red", adj=1)
n <- 100
k <- seq(0, n, by=3)
plot(k, dbinom(k, n, 0.6, log=TRUE), type='l', ylab="log density",
main = "dbinom(*, log=TRUE) is better than  log(dbinom(*))")
lines(k, log(dbinom(k, n, 0.6)), col='red', lwd=2)
mtext("dbinom(k, log=TRUE)", adj=0)
mtext("extended range", adj=0, line = -1, font=4)
mtext("log(dbinom(k))", col="red", adj=1)
sum(dbinom(0:3,100,0.6))
sum(dbinom(0:30,100,0.6))
sum(dbinom(1:30,100,0.6))
sum(dbinom(1:100,100,0.6))
sum(dbinom(1:3,10,0.6))
n <- 100
k <- seq(0,n, by=2)
sum(dbinom(1:k, n, 0.6))
k <- seq(0,n, by=2)
sum(dbinom(1:k, n, 0.6))
tmp <- sum(dbinom(1:k, n, 0.6))
n <- 100
k <- 0:n
plot(k, dbinom(k, n, 0.6), type="h")
plot(k, dbinom(k, n, 0.6), type="h")
k <- seq(0,n, by=2)
plot(k, dbinom(k, n, 0.6), type="h")
n <- 10
k <- seq(0,n, by=2)
plot(k, dbinom(k, n, 0.6), type="h")
n <- 50
k <- seq(0,n, by=2)
plot(k, dbinom(k, n, 0.6), type="h")
n <- 50
k <- seq(0,n, by=1)
plot(k, dbinom(k, n, 0.6), type="h")
n <- 50
k <- seq(0,10, by=1)
plot(k, dbinom(k, n, 0.6), type="h")
n <- 50
k <- seq(0,n, by=1)
plot(k, dbinom(k, n, 0.6), type="h")
n <- 10
k <- seq(0, 3, by=1)
plot(k, dbinom(k, n, 0.6), type="h")
n <- 10
k <- seq(0, n, by=1)
plot(k, dbinom(k, n, 0.6), type="h")
sum(dbinom(1:3, 10, 0.6))
sum(dbinom(1:3, 100, 0.6))
sum(dbinom(1:30, 100, 0.6))
sum(dbinom(1:50, 100, 0.6))
library(glmnet)
x <- rnorm(150000, mean=0.5, sd=0.25, nrow=150, ncol=1000)
x <- matrix(rnorm(150000, mean=0.5, sd=0.25), nrow=150, ncol=1000)
y <- sqrt(x[1,])
y
y <- sqrt(x[1,]^3)
y <- sqrt(x[1,]^3+1)
y
y <- sqrt(x[1,]^3+.001)
y <- sqrt(x[1,]^3+.01)
y <- sqrt(x[1,]^3+.1)
fit <-cv.glmnet(x,y)
fit <-cv.glmnet(x,y[1:150])
fit
fit <-cv.glmnet(x,y[1:150], alpha=1)
pred <- predict(fit, x[3:100,])
cor(pred, y[3:100])
cor(pred, y[3:100])[,1]
cor(pred, y[3:100])
pred <- predict(fit, x[100:150,])
cor(pred, y[100:150])
rstudio::viewData(pred)
f <- function(mu, alpha, beta, gamma, delta, tau, y) {
c<-log( beta^(gamma-1)*exp(-delta*beta) )
b <- 0
for(i in length(y)) {
b <- b + log( 1/sqrt(2*pi*tau^2)*exp((-y[i]-mu[i])^2)*mu[i]*(1-mu[i]^(beta-1)) )
}
a <- b+c
return(a)
}
f(mu, alpha, beta, gamma, delta, tau, y)
mu <- rnorm(10)
y  <- rnorm(10)
alpha <- 3
beta <- 1
gamma <- 0.01
delta <- 1
tau <- 0.01
f(mu, alpha, beta, gamma, delta, tau, y)
f <- function(mu, alpha, beta, gamma, delta, tau, y) {
c<-log( beta^(gamma-1)*exp(-delta*beta) )
b <- 0
for(i in length(y)) {
b <- b + log( 1/sqrt(2*pi*tau^2)*exp((-y[i]-mu[i])^2)*mu[i]*(1-mu[i]^(beta-1)) )
}
a <- b+c
return(b)
}
f(mu, alpha, beta, gamma, delta, tau, y)
f <- function(mu, alpha, beta, gamma, delta, tau, y) {
c<-log( beta^(gamma-1)*exp(-delta*beta) )
b <- 0
for(i in length(y)) {
b <- b + log( 1/sqrt(2*pi*tau^2)*exp((-y[i]-mu[i])^2)*mu[i]*(1-mu[i]^(beta-1)) )
}
a <- b+c
return(c)
}
f(mu, alpha, beta, gamma, delta, tau, y)
mu <- rnorm(10)
y  <- rnorm(10)
alpha <- 3
beta <- 1
gamma <- 2
delta <- 1
tau <- 0.01
f(mu, alpha, beta, gamma, delta, tau, y)
f <- function(mu, alpha, beta, gamma, delta, tau, y) {
c<-log( beta^(gamma-1)*exp(-delta*beta) )
b <- 0
for(i in length(y)) {
b <- b + log( 1/sqrt(2*pi*tau^2)*exp((-y[i]-mu[i])^2)*mu[i]*(1-mu[i]^(beta-1)) )
}
a <- b+c
return(b)
}
f(mu, alpha, beta, gamma, delta, tau, y)
mu <- rnorm(10,10)
y  <- rnorm(10, 50)
alpha <- 3
beta <- 1
gamma <- 2
delta <- 1
tau <- 0.01
f(mu, alpha, beta, gamma, delta, tau, y)
mu <- rnorm(10,1)
y  <- rnorm(10, 5)
alpha <- 3
beta <- 1
gamma <- 2
delta <- 1
tau <- 0.01
f(mu, alpha, beta, gamma, delta, tau, y)
f <- function(mu, alpha, beta, gamma, delta, tau, y) {
c<-log( beta^(gamma-1)*exp(-delta*beta) )
b <- 0
for(i in length(y)) {
b <- b + log( exp(-(y[i]-mu[i])^2)*mu[i]*(1-mu[i]^(beta-1)) )
}
a <- b+c
return(b)
}
f(mu, alpha, beta, gamma, delta, tau, y)
mu <- rnorm(10,0)
y  <- rnorm(10, 1)
alpha <- 3
beta <- 1
gamma <- 2
delta <- 1
tau <- 0.01
f(mu, alpha, beta, gamma, delta, tau, y)
f <- function(mu, alpha, beta, gamma, delta, tau, y) {
c<-log( beta^(gamma-1)*exp(-delta*beta) )
b <- 0
for(i in length(y)) {
b <- b -(y[i]-mu[i])^2) + log( mu[i]*(1-mu[i]^(beta-1)) )
}
a <- b+c
return(b)
}
f <- function(mu, alpha, beta, gamma, delta, tau, y) {
c<-log( beta^(gamma-1)*exp(-delta*beta) )
b <- 0
for(i in length(y)) {
b <- b -(y[i]-mu[i])^2 + log( mu[i]*(1-mu[i]^(beta-1)) )
}
a <- b+c
return(b)
}
mu <- rnorm(10,0)
y  <- rnorm(10, 1)
alpha <- 3
beta <- 1
gamma <- 2
delta <- 1
tau <- 0.01
f(mu, alpha, beta, gamma, delta, tau, y)
f <- function(mu, alpha, beta, gamma, delta, tau, y) {
c<-log( beta^(gamma-1)*exp(-delta*beta) )
b <- 0
for(i in length(y)) {
b <- b -(y[i]-mu[i])^2 + log( mu[i]*(1-mu[i]^(beta-1)) )
b
}
a <- b+c
return(b)
}
mu <- rnorm(10,0)
y  <- rnorm(10, 1)
alpha <- 3
beta <- 1
gamma <- 2
delta <- 1
tau <- 0.01
f(mu, alpha, beta, gamma, delta, tau, y)
f(mu, alpha, beta, gamma, delta, tau, y)
f <- function(mu, alpha, beta, gamma, delta, tau, y) {
c<-log( beta^(gamma-1)*exp(-delta*beta) )
b <- 0
for(i in 1:length(y)) {
b <- b -(y[i]-mu[i])^2 + log( mu[i]*(1-mu[i]^(beta-1)) )
}
a <- b+c
return(b)
}
mu <- rnorm(10,0)
y  <- rnorm(10, 1)
alpha <- 3
beta <- 1
gamma <- 2
delta <- 1
tau <- 0.01
f(mu, alpha, beta, gamma, delta, tau, y)
f <- function(mu, alpha, beta, gamma, delta, tau, y) {
c<-log( beta^(gamma-1)*exp(-delta*beta) )
b <- 0
for(i in 1:2 {
b <- b -(y[i]-mu[i])^2 + log( mu[i]*(1-mu[i]^(beta-1)) )
}
a <- b+c
return(b)
}
f <- function(mu, alpha, beta, gamma, delta, tau, y) {
c<-log( beta^(gamma-1)*exp(-delta*beta) )
b <- 0
for(i in 1:2) {
b <- b -(y[i]-mu[i])^2 + log( mu[i]*(1-mu[i]^(beta-1)) )
}
a <- b+c
return(b)
}
mu <- rnorm(10,0)
y  <- rnorm(10, 1)
alpha <- 3
beta <- 1
gamma <- 2
delta <- 1
tau <- 0.01
f(mu, alpha, beta, gamma, delta, tau, y)
log(0)
mu <- rnorm(10,0)
y  <- rnorm(10, 1)
alpha <- 3
beta <- 0.1
gamma <- 2
delta <- 1
tau <- 0.01
f(mu, alpha, beta, gamma, delta, tau, y)
f <- function(mu, alpha, beta, gamma, delta, tau, y) {
c<-log( beta^(gamma-1)*exp(-delta*beta) )
b <- 0
for(i in 1:2) {
b <- b -(y[i]-mu[i])^2 + log( mu[i]*(1-mu[i])^(beta-1))
}
a <- b+c
return(b)
}
mu <- rnorm(10,0)
y  <- rnorm(10, 1)
alpha <- 3
beta <- 2
gamma <- 2
delta <- 1
tau <- 0.01
f(mu, alpha, beta, gamma, delta, tau, y)
f <- function(mu, alpha, beta, gamma, delta, tau, y) {
c<-log( beta^(gamma-1)*exp(-delta*beta) )
b <- 0
for(i in 1:2) {
b <- b -(y[i]-mu[i])^2 + log( mu[i]*(1-mu[i])^(beta-1))
}
a <- b+c
return(b)
}
mu <- rnorm(10,0)
y  <- rnorm(10, 1)
alpha <- 3
beta <- 3
gamma <- 2
delta <- 1
tau <- 0.01
f(mu, alpha, beta, gamma, delta, tau, y)
mu
f <- function(mu, alpha, beta, gamma, delta, tau, y) {
c<-log( beta^(gamma-1)*exp(-delta*beta) )
b <- 0
for(i in 1:2) {
b <- b -(y[i]-mu[i])^2 + log( mu[i]^(alpha-1)*(1-mu[i])^(beta-1))
}
a <- b+c
return(b)
}
mu <- rnorm(10,0)
y  <- rnorm(10, 1)
alpha <- 3
beta <- 3
gamma <- 2
delta <- 1
tau <- 0.01
f(mu, alpha, beta, gamma, delta, tau, y)
mu <- rnorm(10,0)
y  <- rnorm(10, 1)
alpha <- 3
beta <- 3
gamma <- 2
delta <- 1
tau <- 0.01
f(mu, alpha, beta, gamma, delta, tau, y)
f <- function(mu, alpha, beta, gamma, delta, tau, y) {
c<-log( beta^(gamma-1)*exp(-delta*beta) )
b <- 0
for(i in 1:length(y)) {
b <- b -(y[i]-mu[i])^2 + log( mu[i]^(alpha-1)*(1-mu[i])^(beta-1))
}
a <- b+c
return(b)
}
mu <- rnorm(10,0)
y  <- rnorm(10, 1)
alpha <- 3
beta <- 3
gamma <- 2
delta <- 1
tau <- 0.01
f(mu, alpha, beta, gamma, delta, tau, y)
mu.draws <- numeric(5000)
mu.last <- 1
for(i in 1:5000) {
mu.cand <- runif(1,0,100)
ratio <- f(mu.cand, alpha, beta, gamma, delta, tau, y)/ f(mu.last, alpha, beta, gamma, delta, tau, y)
if(runif(1)< min(ratio,1)) mu.last <- mu.cand
mu.draws[i] <- mu.last
}
mu.draws <- numeric(5000)
mu.last <- 1
for(i in 1:5000) {
mu.cand <- runif(1,0,100)
ratio <- f(mu.cand, alpha, beta, gamma, delta, tau, y)/ f(mu.last, alpha, beta, gamma, delta, tau, y)
if(runif(1)< min(ratio,1)) mu.last <- mu.cand
mu.draws[i] <- mu.last
}
f(mu, alpha, beta, gamma, delta, tau, y)
mu.cand <- runif(1,0,100)
ratio <- f(mu.cand, alpha, beta, gamma, delta, tau, y)/ f(mu.last, alpha, beta, gamma, delta, tau, y)
ratio
for(i in 1:5000) {
mu.cand <- runif(1,0,100)
ratio <- f(mu.cand, alpha, beta, gamma, delta, tau, y)/ f(mu.last, alpha, beta, gamma, delta, tau, y)
if(runif(1)< min(ratio,1)) {
mu.last <- mu.cand
}
mu.draws[i] <- mu.last
}
f(mu.cand, alpha, beta, gamma, delta, tau, y)
mu.cand <- runif(1,0,1)
ratio <- f(mu.cand, alpha, beta, gamma, delta, tau, y)/ f(mu.last, alpha, beta, gamma, delta, tau, y)
ratio
mu.cand
f(mu.cand, alpha, beta, gamma, delta, tau, y)
f <- function(mu, alpha, beta, gamma, delta, tau, y) {
c<-log( beta^(gamma-1)*exp(-delta*beta) )
b <- 0
for(i in 1:length(y)) {
b <- b -(y[i]-mu[i])^2 + log( mu[i]^(alpha-1)*(1-mu[i])^(beta-1))
}
a <- b+c
return(a)
}
ratio <- f(mu.cand, alpha, beta, gamma, delta, tau, y)/ f(mu.last, alpha, beta, gamma, delta, tau, y)
ratio
f(mu.cand, alpha, beta, gamma, delta, tau, y)
setwd("~/Desktop/rjags example")
alpha=3
tau=2
y = rnorm(10)
n= length(y)
require(rjags)
#random effects over betaT (that is over the indicator variables)
data=list(y=y, n=n)
init=list(tau=1, mean=rep(0,10))
modelstring="
model {
for (i in 1:n) {
mean[i]<- beta(a, b)
y[i]~dnorm(mean[i],tau)
}
b <- dgamma(c,d)
alpha <- 3
tau <- 0.01
d <- 1
c <- 0.01
}
"
model=jags.model(textConnection(modelstring),
data=data,inits=init)
y <- rnorm(10)
n <- length(y)
require(rjags)
#random effects over betaT (that is over the indicator variables)
data=list(y=y, n=n)
init=list(tau=1, mean=rep(0,10))
modelstring="
model {
for (i in 1:n) {
mean[i]<- beta(a, b)
y[i]~dnorm(mean[i],tau)
}
b <- dgamma(c,d)
d <- 1
c <- 0.01
alpha <- 3
tau <- 0.01
}
"
model=jags.model(textConnection(modelstring),
data=data,inits=init)
data=list(y=y, n=n)
init=list(mean=rep(0,10))
modelstring="
model {
for (i in 1:n) {
mean[i]<- beta(a, b)
y[i]~dnorm(mean[i],tau)
}
b <- dgamma(c,d)
d <- 1
c <- 0.01
alpha <- 3
tau <- 0.01
}
"
model=jags.model(textConnection(modelstring),
data=data,inits=init)
modelstring="
model {
for (i in 1:n) {
mean[i]<- beta(a, b)
y[i]~dnorm(mean[i],tau)
}
b ~ dgamma(c,d)
d <- 1
c <- 0.01
alpha <- 3
tau <- 0.01
}
"
model=jags.model(textConnection(modelstring),
data=data,inits=init)
modelstring="
model {
for (i in 1:n) {
mean[i]<- beta(alpha, b)
y[i]~dnorm(mean[i],tau)
}
b ~ dgamma(c,d)
d <- 1
c <- 0.01
alpha <- 3
tau <- 0.01
}
"
model=jags.model(textConnection(modelstring),
data=data,inits=init)
modelstring="
model {
for (i in 1:n) {
mean[i]<- dbeta(alpha, b)
y[i]~dnorm(mean[i],tau)
}
b ~ dgamma(c,d)
d <- 1
c <- 0.01
alpha <- 3
tau <- 0.01
}
"
model=jags.model(textConnection(modelstring),
data=data,inits=init)
modelstring="
model {
for (i in 1:n) {
mean[i] ~ dbeta(alpha, b)
y[i]~dnorm(mean[i],tau)
}
b ~ dgamma(c,d)
d <- 1
c <- 0.01
alpha <- 3
tau <- 0.01
}
"
model=jags.model(textConnection(modelstring),
data=data,inits=init)
